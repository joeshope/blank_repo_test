name: Run Scan and Comment on PR

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write # Still needed to write/update the comment

jobs:
  scan-and-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run your scan
        id: scan
        run: |
          npm install -g snyk
          snyk auth --auth-type=token ${{ secrets.SNYK_TOKEN }}
          snyk code test --json-file-output=sast-results.json || true

      - name: Format scan output for comment
        id: format
        run: |
          # This tells GITHUB_OUTPUT to start capturing a multi-line
          # string for the 'body' output, ending when it sees 'EOF'
          echo "body<<EOF" >> "$GITHUB_OUTPUT"
          
          # Now, we just echo our content. It will all be captured
          # into the 'body' output variable.
          echo "### 🛡️ Scan Results" >> "$GITHUB_OUTPUT"
          echo "" >> "$GITHUB_OUTPUT"
          echo "Here is the output from our security scan:" >> "$GITHUB_OUTPUT"
          echo "" >> "$GITHUB_OUTPUT"
          echo "\`\`\`json" >> "$GITHUB_OUTPUT"
          # This safely streams the raw content of your file
          cat sast-results.json >> "$GITHUB_OUTPUT"
          echo "" >> "$GITHUB_OUTPUT"
          echo "\`\`\`" >> "$GITHUB_OUTPUT"
          
          # This is the closing delimiter
          echo "EOF" >> "$GITHUB_OUTPUT"
        shell: bash
        
      - name: Create or Update PR Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          # Use the PR number from the event payload
          issue-number: ${{ github.event.pull_request.number }}
          # Use the formatted body from the previous step's output
          body: ${{ steps.format.outputs.body }}
          # This ID is used to find and update the comment instead of creating a new one
          # You can change 'scan-results-comment' to any unique string
          unique-id-for-update: scan-results-comment
